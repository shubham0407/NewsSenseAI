# Application identity
spring.application.name=NewsSenseAI

# PostgreSQL DataSource settings
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=Postgres@0407
spring.datasource.driver-class-name=org.postgresql.Driver

baseUrl=http://192.168.0.130:11434

# JPA & Hibernate configuration
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# AI Configuration
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.model=gpt-3.5-turbo
spring.ai.openai.embedding.model=text-embedding-ada-002

spring.ai.vectorstore.pgvector.initialize-schema=true
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
spring.ai.vectorstore.pgvector.dimensions=1536



#route key: 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


openai.api.key=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


#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
#CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
#
#CREATE TABLE news_articles (
#id UUID PRIMARY KEY,
#title VARCHAR(255),
#description TEXT,
#url VARCHAR(2048),
#publication_date TIMESTAMP,
#source_name VARCHAR(255),
#relevance_score REAL,
#latitude DOUBLE PRECISION,
#longitude DOUBLE PRECISION,
#llm_summary TEXT
#);
#
#CREATE TABLE news_article_category (
#article_id UUID NOT NULL,
#category TEXT NOT NULL,
#FOREIGN KEY (article_id) REFERENCES news_articles(id) ON DELETE CASCADE
#);






